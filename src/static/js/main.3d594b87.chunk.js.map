{"version":3,"sources":["resources/Kw.svg","resources/Kb.svg","resources/Qw.svg","resources/Qb.svg","resources/Rw.svg","resources/Rb.svg","resources/Bw.svg","resources/Bb.svg","resources/Nw.svg","resources/Nb.svg","resources/pw.svg","resources/pb.svg","Piece.js","Square.js","Board.js","App.js","moveChecker.js","index.js"],"names":["module","exports","Piece","props","piece","className","alt","src","pieceDict","draggable","style","width","size","height","position","left","x","top","y","zIndex","Kw","Kb","Qw","Qb","Rw","Rb","Bw","Bb","Nw","Nb","pw","pb","reducer","state","action","type","dragging","clicked","Square","useReducer","slice","color","dispatch","context","useContext","DragContext","parseInt","backgroundColor","border","onClick","selectedSquare","onMouseDown","onMouseUp","hoverSquare","startX","startY","mouseX","mouseY","Board","GlobalContext","Math","floor","dragStartX","dragStartY","originSquare","endingSquare","postMove","endX","endY","Provider","value","onMouseMove","evt","pageX","pageY","board","map","arr","i","key","val","j","React","createContext","App","check","move","newBoard","Array","from","control","controlBoard","pieces","forEach","row","push","v","canHypoMove","generateControl","king","Error","abs","colorMove","console","log","min","window","innerHeight","innerWidth","ReactDOM","render","useEffect","resize","onresize","children","document","getElementById"],"mappings":"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","file":"static/js/main.3d594b87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Kw.250510ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/Kb.66e1bcad.svg\";","module.exports = __webpack_public_path__ + \"static/media/Qw.4320a2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Qb.7b3e33e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rw.095b1a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rb.96872a66.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bw.09004fd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bb.1f3b8d1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Nw.e6294efe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Nb.d39f1d02.svg\";","module.exports = __webpack_public_path__ + \"static/media/pw.d69014fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/pb.1c52d8c4.svg\";","import React from 'react';\r\n\r\nimport './Piece.css';\r\n\r\nimport Kw from './resources/Kw.svg';\r\nimport Kb from './resources/Kb.svg';\r\nimport Qw from './resources/Qw.svg';\r\nimport Qb from './resources/Qb.svg';\r\nimport Rw from './resources/Rw.svg';\r\nimport Rb from './resources/Rb.svg';\r\nimport Bw from './resources/Bw.svg';\r\nimport Bb from './resources/Bb.svg';\r\nimport Nw from './resources/Nw.svg';\r\nimport Nb from './resources/Nb.svg';\r\nimport pw from './resources/pw.svg';\r\nimport pb from './resources/pb.svg';\r\n\r\nconst Piece = (props) => {\r\n    if (props.piece === '')\r\n    {\r\n        return null;\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <img className = \"piece\" alt = \"Error\" src = {pieceDict[props.piece]} draggable = {false}\r\n                style = {{\r\n                    width: props.size * 7.5 / 64,\r\n                    height: props.size * 7.5 / 64,\r\n                    ...(props.position ? { position: 'fixed', left: props.position.x - props.size / 16, top: props.position.y - props.size / 16, zIndex: 11 } : null)\r\n                }} />\r\n        );\r\n    }\r\n};\r\n\r\nexport default Piece;\r\n\r\nconst pieceDict = {\r\n    Kw: Kw,\r\n    Kb: Kb,\r\n    Qw: Qw,\r\n    Qb: Qb,\r\n    Rw: Rw,\r\n    Rb: Rb,\r\n    Bw: Bw,\r\n    Bb: Bb,\r\n    Nw: Nw,\r\n    Nb: Nb,\r\n    pw: pw,\r\n    pb: pb\r\n}","import React, { useReducer, useContext } from 'react';\r\nimport Piece from './Piece';\r\n\r\nimport './Square.css';\r\n\r\nimport { DragContext } from './Board';\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type)\r\n    {\r\n        case ('dragging'):\r\n            // console.log('dragging');\r\n            return { ...state, dragging: true };\r\n        case ('undragging'):\r\n            // console.log('undragging');\r\n            return { ...state, dragging: false };\r\n        case ('click'):\r\n            return { ...state, clicked: !state.clicked };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n/**\r\n * Square on the chess board\r\n * @param {{ x: number, y: number, piece: string, color: string, dispatch: React.Dispatch<A> }} props the props\r\n */\r\nconst Square = (props) => {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n            clicked: false,\r\n            dragging: false,\r\n            x: null,\r\n            y: null,\r\n            piece: props.piece.slice(0, 1),\r\n            color: props.piece.slice(1, 2)\r\n        });\r\n    const context = useContext(DragContext);\r\n\r\n    if (props.piece === '')\r\n    {\r\n        return (\r\n            <div className = \"square\" style = {{\r\n                top: parseInt(props.y) * props.size / 8,\r\n                left: parseInt(props.x) * props.size / 8,\r\n                backgroundColor: props.color === 'white' ? 'burlywood' : 'peru',\r\n                width: props.size * 15 / 128,\r\n                height: props.size * 15 / 128,\r\n                border: `${props.size / 128}px solid black`\r\n            }} onClick = {() => props.dispatch({ type: 'selected', x: props.x, y: props.y })} />\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div className = \"square\" style = {{\r\n                    top: parseInt(props.y) * props.size / 8,\r\n                    left: parseInt(props.x) * props.size / 8,\r\n                    backgroundColor: context.selectedSquare.x === props.x && context.selectedSquare.y === props.y\r\n                        ? 'rgba(64, 143, 50, 0.6)' : props.color === 'white' ? 'burlywood' : 'peru',\r\n                    width: props.size * 15 / 128,\r\n                    height: props.size * 15 / 128,\r\n                    border: `${props.size / 128}px solid black`\r\n                }} onMouseDown = {() => dispatch({ type: 'dragging' })} onMouseUp = {() => {\r\n                    dispatch({ type: 'undragging' });\r\n                    if (context.hoverSquare.x === props.x && context.hoverSquare.y === props.y)\r\n                    {\r\n                        props.dispatch({\r\n                            type: context.selectedSquare.x === props.x && context.selectedSquare.y === props.y ? 'unselected' : 'selected',\r\n                            x: props.x,\r\n                            y: props.y\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        props.dispatch({\r\n                            type: 'move',\r\n                            startX: props.x,\r\n                            startY: props.y,\r\n                            piece: props.piece\r\n                        });\r\n                    }\r\n                }} >\r\n                <Piece size = {props.size} piece = {props.piece} position = {state.dragging ? { x: context.mouseX, y: context.mouseY } : null} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Square;","import React, { useReducer, useContext } from 'react';\r\n\r\nimport './Board.css';\r\n\r\nimport Square from './Square';\r\n\r\nimport GlobalContext from './index';\r\n\r\nconst Board = () => {\r\n    const context = useContext(GlobalContext);\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type)\r\n        {\r\n            case ('mousemove'):\r\n                return {\r\n                    ...state,\r\n                    mouseX: action.x,\r\n                    mouseY: action.y,\r\n                    hoverSquare: {\r\n                        x: Math.floor((action.x - (context.size / 128))/(context.size / 8)),\r\n                        y: Math.floor((action.y - (context.size / 128))/(context.size / 8))\r\n                    }\r\n                };\r\n            case ('dragging'):\r\n                return {\r\n                    ...state,\r\n                    dragging: true,\r\n                    dragStartX: state.mouseX,\r\n                    dragStartY: state.mouseY,\r\n                    originSquare: {\r\n                        x: Math.floor((state.mouseX - (context.size / 128))/(context.size / 8)),\r\n                        y: Math.floor((state.mouseY - (context.size / 128))/(context.size / 8))\r\n                    }\r\n                };\r\n            case ('undragging'):\r\n                return {\r\n                    ...state,\r\n                    dragging: false,\r\n                    endingSquare: {\r\n                        x: Math.floor((state.mouseX - (context.size / 128))/(context.size / 8)),\r\n                        y: Math.floor((state.mouseY - (context.size / 128))/(context.size / 8))\r\n                    }\r\n                };\r\n            case ('selected'):\r\n                return {\r\n                    ...state,\r\n                    selectedSquare: { x: action.x, y: action.y }\r\n                };\r\n            case ('unselected'):\r\n                return {\r\n                    ...state,\r\n                    selectedSquare: { x: null, y: null }\r\n                };\r\n            case ('move'):\r\n                context.postMove({\r\n                    startX: action.startX,\r\n                    startY: action.startY,\r\n                    endX: state.hoverSquare.x,\r\n                    endY: state.hoverSquare.y,\r\n                    piece: action.piece\r\n                });\r\n                return {\r\n                    ...state,\r\n                    selectedSquare: { x: null, y: null }\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        dragging: false,\r\n        dragStartX: null,\r\n        dragStartY: null,\r\n        mouseX: null,\r\n        mouseY: null,\r\n        hoverSquare: { x: null, y: null },\r\n        originSquare: { x: null, y: null},\r\n        selectedSquare: { x: null, y: null }\r\n    });\r\n\r\n    return (\r\n        <DragContext.Provider value = {state}>\r\n            <div style = {{ width: context.size, height: context.size }} onMouseMove = {(evt) => dispatch({ type: 'mousemove', x: evt.pageX, y: evt.pageY })}\r\n                className = \"board\" onMouseDown = {() => dispatch({ type: 'dragging' })} onMouseUp = {() => dispatch({ type: 'undragging' })} >\r\n                {context.board.map((arr, i) => (\r\n                    <span className = \"row\" key = {i}>\r\n                        {arr.map((val, j) => <Square size = {context.size} dispatch = {dispatch} key = {`${i} ${j}`} x = {j} y = {i} piece = {val}\r\n                                                color = {i % 2 === 0 ? j % 2 === 0 ? 'white' : 'black' : j % 2 === 0 ? 'black' : 'white'} />)}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        </DragContext.Provider>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n\r\nexport const DragContext = React.createContext();","import React from 'react';\nimport './App.css';\n\nimport Board from './Board';\n\nfunction App() {\n  return (\n    <>\n      <Board />\n    </>\n  );\n}\n\nexport default App;","/**\r\n * Checks if a move is valid\r\n * @param {{\r\n *      startX: number,\r\n *      startY: number,\r\n *      endX: number,\r\n *      endY: number,\r\n *      piece: string\r\n *  }} move the move attempting to be played\r\n * @param {string[][]} board the current board state\r\n */\r\nconst check = (move, board) => {\r\n    const color = move.piece.slice(1);\r\n    const newBoard = Array.from(board, (arr) => [...arr]);\r\n    newBoard[move.endY][move.endX] = move.piece;\r\n    newBoard[move.startY][move.startX] = '';\r\n    const control = generateControl(newBoard, color === 'w' ? 'b' : 'w');\r\n    const king = { x: null, y: null };\r\n\r\n    board.forEach((row, i) => {\r\n        row.forEach((val, j) => {\r\n            if (val.slice(1) === color && val.slice(0, 1) === 'K')\r\n            {\r\n                king.x = j;\r\n                king.y = i;\r\n            }\r\n        });\r\n    });\r\n    if (king.x === null || king.y === null) { throw new Error('null King!'); }\r\n\r\n    return !control[king.y][king.x] && canHypoMove(move.piece, board, control, {\r\n        startX: move.startX,\r\n        startY: move.startY,\r\n        endX: move.endX,\r\n        endY: move.endY\r\n    });\r\n};\r\n\r\nexport default check;\r\n\r\n/**\r\n * Generates the \"control\" of a color; squares being controlled cannot be moved to by the king\r\n * @param {string[][]} board the current state of the board\r\n * @param {string} color the color whose control is being generated\r\n */\r\nfunction generateControl(board, color)\r\n{\r\n    const controlBoard = [[false, false, false, false, false, false, false, false],\r\n                            [false, false, false, false, false, false, false, false],\r\n                            [false, false, false, false, false, false, false, false],\r\n                            [false, false, false, false, false, false, false, false],\r\n                            [false, false, false, false, false, false, false, false],\r\n                            [false, false, false, false, false, false, false, false],\r\n                            [false, false, false, false, false, false, false, false],\r\n                            [false, false, false, false, false, false, false, false]];\r\n    const pieces = [];\r\n\r\n    board.forEach((row, i) => {\r\n        row.forEach((val, j) => {\r\n            if (val.slice(1) === color)\r\n            {\r\n                pieces.push({ piece: val, x: j, y: i });\r\n            }\r\n        });\r\n    });\r\n    // console.log(controlBoard);\r\n\r\n    board.forEach((row, i) => {\r\n        row.forEach((v, j) => {\r\n            if (controlBoard[i][j])\r\n            {\r\n                return;\r\n            }\r\n            for (let val of pieces)\r\n            {\r\n                if (canHypoMove(val.piece, board, controlBoard, { startX: val.x, startY: val.y, endX: j, endY: i }))\r\n                {\r\n                    controlBoard[i][j] = true;\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    return controlBoard;\r\n}\r\n\r\n/**\r\n * Checks whether a piece can *hypothetically* move to a spot\r\n * @param {string} piece the piece being moved\r\n * @param {string[][]} board the current board state\r\n * @param {{ startX: number, startY: number, endX: number, endY: number }} move the move hypothetically being played\r\n */\r\nfunction canHypoMove(piece, board, control, move)\r\n{\r\n    switch (piece.slice(0, 1))\r\n    {\r\n        case ('R'):\r\n            if (move.startX === move.endX && (board[move.endY][move.endX] === '' || board[move.endY][move.endX].slice(1) !== piece.slice(1)))\r\n            {\r\n                const j = move.startX;\r\n                if (move.startY < move.endY)\r\n                {\r\n                    for (let i = move.startY + 1; i < move.endY; i++)\r\n                    {\r\n                        if (board[i][j] !== '')\r\n                        {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    for (let i = move.startY - 1; i > move.endY; i--)\r\n                    {\r\n                        if (board[i][j] !== '')\r\n                        {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else if (move.startY === move.endY && (board[move.endY][move.endX] === '' || board[move.endY][move.endX].slice(1) !== piece.slice(1)))\r\n            {\r\n                const i = move.startY;\r\n                if (move.startX < move.endX)\r\n                {\r\n                    for (let j = move.startX + 1; j < move.endX; j++)\r\n                    {\r\n                        if (board[i][j] !== '')\r\n                        {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    for (let j = move.startX - 1; j > move.endX; j--)\r\n                    {\r\n                        if (board[i][j] !== '')\r\n                        {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else\r\n            {\r\n                return false;\r\n            }\r\n        case ('B'):\r\n            if (Math.abs(move.startX - move.endX) !== Math.abs(move.startY - move.endY) || (board[move.endY][move.endX] !== '' && board[move.endY][move.endX].slice(1) === piece.slice(1)))\r\n            {\r\n                return false;\r\n            }\r\n            if (move.startX < move.endX && move.startY < move.endY)\r\n            {\r\n                for (let j = move.startX + 1, i = move.startY + 1; i < move.endY && j < move.endX; i++, j++)\r\n                {\r\n                    if (board[i][j] !== '')\r\n                    {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            if (move.startX > move.endX && move.startY < move.endY)\r\n            {\r\n                for (let j = move.startX - 1, i = move.startY + 1; i < move.endY && j > move.endX; i++, j--)\r\n                {\r\n                    if (board[i][j] !== '')\r\n                    {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            if (move.startX < move.endX && move.startY > move.endY)\r\n            {\r\n                for (let j = move.startX + 1, i = move.startY - 1; i > move.endY && j < move.endX; i--, j++)\r\n                {\r\n                    if (board[i][j] !== '')\r\n                    {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            if (move.startX > move.endX && move.startY > move.endY)\r\n            {\r\n                for (let j = move.startX - 1, i = move.startY - 1; i > move.endY && j > move.endX; i--, j--)\r\n                {\r\n                    if (board[i][j] !== '')\r\n                    {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        case ('N'):\r\n            return (board[move.endY][move.endX] === '' || board[move.endY][move.endX].slice(1) !== piece.slice(1))\r\n                    && ((Math.abs(move.startX - move.endX) === 1 && Math.abs(move.startY - move.endY) === 2)\r\n                    || (Math.abs(move.startX - move.endX) === 2 && Math.abs(move.startY - move.endY) === 1));\r\n        case ('Q'):\r\n            return canHypoMove('R' + piece.slice(1), board, control, move) || canHypoMove('B' + piece.slice(1), board, control, move);\r\n        case ('K'):\r\n            if (!control[move.endY][move.endX] && (board[move.endY][move.endX] === '' || board[move.endY][move.endX].slice(1) !== piece.slice(1)))\r\n            {\r\n                return Math.abs(move.startX - move.endX) <= 1 && Math.abs(move.startY - move.endY) <= 1;\r\n            }\r\n            return false;\r\n        case ('p'):\r\n            if (move.startY === (piece.slice(1) === 'w' ? 6 : 1))\r\n            {\r\n                if (move.endX === move.startX)\r\n                {\r\n                    return (piece.slice(1) === 'w' ? move.startY - move.endY <= 2  && move.startY - move.endY > 0\r\n                            : move.endY - move.startY <= 2 && move.endY - move.startY > 0) &&  board[move.endY][move.endX] === '';\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (move.endX === move.startX)\r\n                {\r\n                    return (piece.slice(1) === 'w' ? move.startY - move.endY === 1 : move.endY - move.startY === 1) && board[move.endY][move.endX] === '';\r\n                }\r\n\r\n            }\r\n            if (Math.abs(move.startX - move.endX) <= 1)\r\n            {\r\n                return (piece.slice(1) === 'w' ? move.startY - move.endY === 1 : move.endY - move.startY === 1) &&\r\n                        (board[move.endY][move.endX] !== '' && board[move.endY][move.endX].slice(1) !== piece.slice(1));\r\n            }\r\n            return false;\r\n        default:\r\n            throw new Error(`Piece Error Occured: ${piece}`);\r\n    }\r\n}","import React, { useReducer, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport check from './moveChecker';\r\n\r\nconst GlobalContext = React.createContext();\r\nexport default GlobalContext;\r\n\r\nconst reducer = (state, action) => {\r\n    let board;\r\n    switch (action.type)\r\n    {\r\n        case ('init'):\r\n            board = [['Rb', 'Nb', 'Bb', 'Qb', 'Kb', 'Bb', 'Nb', 'Rb'],\r\n                        ['pb', 'pb', 'pb', 'pb', 'pb', 'pb', 'pb', 'pb'],\r\n                        ['', '', '', '', '', '', '', '', ],\r\n                        ['', '', '', '', '', '', '', '', ],\r\n                        ['', '', '', '', '', '', '', '', ],\r\n                        ['', '', '', '', '', '', '', '', ],\r\n                        ['pw', 'pw', 'pw', 'pw', 'pw', 'pw', 'pw', 'pw'],\r\n                        ['Rw', 'Nw', 'Bw', 'Qw', 'Kw', 'Bw', 'Nw', 'Rw']];\r\n            return { ...state, board };\r\n        case ('move'):\r\n            board = state.board;\r\n            if (state.colorMove !== action.move.piece.slice(1)) console.log('not his move');\r\n            if (state.colorMove === action.move.piece.slice(1) && check(action.move, board))\r\n            {\r\n                board[action.move.endY][action.move.endX] = action.move.piece;\r\n                board[action.move.startY][action.move.startX] = '';\r\n                return { ...state, colorMove: state.colorMove === 'w' ? 'b' : 'w', board };\r\n            }\r\n            return state;\r\n        case ('resize'):\r\n            return { ...state, size: Math.floor(Math.min(window.innerHeight, window.innerWidth) * 0.993) };\r\n        case ('resize-electron'):\r\n            return { ...state, size: Math.floor(Math.min(action.width, action.height) * 0.97) };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Context = (props) => {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        board: [],\r\n        size: Math.floor(Math.min(window.innerHeight, window.innerWidth) * 0.993),\r\n        colorMove: 'w',\r\n        postMove: (move) => {\r\n            dispatch({ type: 'move', move });\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: 'init' });\r\n        window.resize = ([width, height]) => {\r\n            dispatch({ type: 'resize-electron', width, height });\r\n        };\r\n        window.onresize = () => { dispatch({ type: 'resize' }) };\r\n    }, []);\r\n\r\n    return (\r\n        <GlobalContext.Provider value = {state}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n\r\nReactDOM.render(<Context><App /></Context>, document.getElementById('root'));"],"sourceRoot":""}